# generated by muratyaman/virgul

"""
Swagger Petstore - OpenAPI 3.0 1.0.11
This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
You can now help us improve the API whether it's by making changes to the definition itself or to the code.
That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

_If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_

Some useful links:
- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
"""

# QUERY

type Query {
  """
  GET /pet/findByStatus
  Finds Pets by status
  Multiple status values can be provided with comma separated strings
  """
  findPetsByStatus(data: Input_findPetsByStatus): Output_findPetsByStatus
  """
  GET /pet/findByTags
  Finds Pets by tags
  Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
  """
  findPetsByTags(data: Input_findPetsByTags): Output_findPetsByTags
  """
  GET /pet/{petId}
  Find pet by ID
  Returns a single pet
  """
  getPetById(data: Input_getPetById): Output_getPetById
  """
  GET /store/inventory
  Returns pet inventories by status
  Returns a map of status codes to quantities
  """
  getInventory(data: Input_getInventory): Output_getInventory
  """
  GET /store/order/{orderId}
  Find purchase order by ID
  For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.
  """
  getOrderById(data: Input_getOrderById): Output_getOrderById
  """
  GET /user/login
  Logs user into the system
  """
  loginUser(data: Input_loginUser): Output_loginUser
  """
  GET /user/{username}
  Get user by user name
  """
  getUserByName(data: Input_getUserByName): Output_getUserByName


}

# MUTATION

type Mutation {
  """
  POST /pet
  Add a new pet to the store
  Add a new pet to the store
  """
  addPet(data: Input_addPet): Output_addPet
  """
  POST /pet/{petId}/uploadImage
  uploads an image
  """
  uploadFile(data: Input_uploadFile): Output_uploadFile
  """
  POST /store/order
  Place an order for a pet
  Place a new order in the store
  """
  placeOrder(data: Input_placeOrder): Output_placeOrder
  """
  POST /user/createWithList
  Creates list of users with given input array
  Creates list of users with given input array
  """
  createUsersWithListInput(data: Input_createUsersWithListInput): Output_createUsersWithListInput

}

# TYPES



